import {requestsend, requestsendtoken} from '../../utils/util.js'
import { Config } from '../../utils/config'
import {  Token } from '../../utils/token.js'
var pageindexs;
var alldatas = [];
var data2=[];
Page({
  /**
   * 页面的初始数据
   */
  data: {
    id:'',
    pageid:'',
    questionid: '',
    sortid:'',
    typeid: '',
    title: "",
    timus: Object,
    questions: Object,
    biaoji: false,
    newindex: 1,
    allindex: 0,
    active: 0,
    current:0,
    tihsi: "",
    showif: true,
    alldata: [],
    indicatorDots: false,
    autoplay: false,
    hasUserInfo: true,
    interval: 1000, // 自动切换时间间隔
    duration: 1000, // 滑动动画时长
    show: false,
    mapUrl: '',
    newvalue:'',
    value: '',
    more:'',
    defaults:true
  },
  //在线答疑
  Online: function() {
    var token = wx.getStorageSync("token")
    if (token == '') {
      wx.showToast({
        title: `该微信还未注册精略网校或未绑定精略网校账号，暂不可使用该功能，请尽快注册并登陆！`,
        icon: "none",
        duration: 2000
      })
      return;
    } 
    data2 = [];
    pageindexs = 0;
    this.setData({
      show: true
    })
    this.getQues(1);
  },
  onClose() {
    this.setData({
      show: false
    });
  },
  onChange(event) {
    console.log(event.detail)
    this.setData({
      newvalue: event.detail.value
    });
    if (event.detail.value != ''){
      this.setData({
        defaults: false
      });
    }else{
      this.setData({
        defaults: true
      });
    }
  },
  onQues(e){
    if (this.data.defaults){
      return;
    }
    var token = new Token();
    var that= this;
    var param = {
      PaperId: this.data.pageid,
      QuestionID: this.data.questionid,
      TypeInfoID: this.data.typeid,
      CourseSort: this.data.sortid,
      UserMsg: this.data.newvalue,
    }
    token.verify((tokenres) => {
      wx.request({
        url: Config.apiUrl + '/api/UserQuestion/AddUserQuestion',
        data: param,
        method: 'POST',
        header: {
          "content-type": "application/x-www-form-urlencoded",
          'authorization': 'Bearer ' + tokenres + ''
        },
        success: function (res) {
          console.log(res)
          that.setData({
            show: false,
            defaults:true,
            value:''
          });
          wx.showToast({
            title: ``+res.data.msg,
            icon: "none",
            duration: 2000
          })
        },
        fail: function (error) {
          that.setData({
            show: false
          });
          wx.showToast({
            icon: "none",
            title: `服务器异常，清稍候再试`
          })
        }
      })
    });
  },
  getQues(pageindex){
    pageindexs = pageindex;
    var param = {
      paperid: this.data.pageid,
      Questionid: this.data.questionid,
      pagesize:10,
      pageindex: pageindex
    }
    var that = this;
    requestsendtoken('api/UserQuestion/Getlist', "GET", param, function (e) {
      console.log(e);
      data2 = data2.concat(e.data.myquestindata)
      that.setData({
        questions: data2
      });
      if (pageindexs < e.data.sumpagecount ){
        that.setData({
          more: '下拉加载更多...'
        });
      }else{
        that.setData({
          more: '暂无更多数据'
        });
        data2=[];
        pageindexs=0;
      }
    })
  },
  upper(e) { 
    if (this.data.more != '暂无更多数据' ){
      this.getQues(pageindexs + 1);
    }
  },
  //切换题目
  intervalChange: function (e) {

    if (e.detail.source == 'autoplay') {
      this.setData({
        autoplay: false
      })
    }
    this.setData({
      newindex: e.detail.current + 1,
      questionid: alldatas[e.detail.current].questionid,
      typeid: alldatas[e.detail.current].typeid,
      biaoji: alldatas[e.detail.current].sign,
      value: '',
      defaults: true
    })
    
    // wx.setStorageSync(this.data.id, value)
  },
  videoErrorCallback: function (e) {
    console.log('视频错误信息:')
    console.log(e.detail.errMsg)
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    alldatas = [];
    var id = options.id
    var pageid = options.pageid
    var index = parseInt(options.index)
    var token = wx.getStorageSync("token")
    // var id = "29361419c1c8457cb99f6fcd4bcff4f3"
    // var pageid = "0058e459df8a482aad792d4dffd6e9ff"
    // var index = 0
    var param = {
      AnswerPaperGuid: id
    }
    var that = this;
    if (token == ''){
      var param2 = {
        Chachekey: id
      }
      requestsend('api/TiKu/GetJiXiResultNoLogin', "GET", param2, function (e) {
        console.log(e);
        for (var i = 0; i < e.data.result.length; i++) {
          for (var j = 0; j < e.data.result[i].data.length; j++) {
            e.data.result[i].data[j].num = e.data.result[i].num
            e.data.result[i].data[j].title = e.data.result[i].title
            alldatas = alldatas.concat(e.data.result[i].data[j])
          }
        }
        wx.setNavigationBarTitle({
          title: e.data.papername
        })
        console.log(alldatas);
        that.setData({
          id: id,
          pageid: pageid,
          allindex: alldatas.length,
          current: index,
          newindex: index + 1,
          alldata: alldatas,
          questionid: alldatas[index].questionid,
          typeid: alldatas[index].typeid,
          sortid: e.data.sortid,
          biaoji: alldatas[index].sign
        })
      })
    }else{
      requestsendtoken('api/QX/GetJiXiResult', "GET", param, function (e) {
        console.log(e);
        for (var i = 0; i < e.data.result.length; i++) {
          for (var j = 0; j < e.data.result[i].data.length; j++) {
            e.data.result[i].data[j].num = e.data.result[i].num
            e.data.result[i].data[j].title = e.data.result[i].title
            alldatas = alldatas.concat(e.data.result[i].data[j])
          }
        }
        wx.setNavigationBarTitle({
          title: e.data.papername
        })
        console.log(alldatas);
        that.setData({
          id: id,
          pageid: pageid,
          allindex: alldatas.length,
          current: index,
          newindex: index + 1,
          alldata: alldatas,
          questionid: alldatas[index].questionid,
          typeid: alldatas[index].typeid,
          sortid: e.data.sortid,
          biaoji: alldatas[index].sign
        })
      })
    }
   
  },
  onBiaoji: function (e) {
    var token = wx.getStorageSync("token")
    if (token == '') {
      wx.showToast({
        title: `该微信还未注册精略网校或未绑定精略网校账号，暂不可使用该功能，请尽快注册并登陆！`,
        icon: "none",
        duration: 2000
      })
      return;
    } 
    var pagerid = this.data.pageid;
    var questionid = this.data.questionid;
    var typeid = this.data.typeid;
    var param = {
      PaperId: pagerid,
      Question_ID: questionid,
      Type_Info_ID: typeid
    }
    if (this.data.biaoji) {
      this.setData({
        biaoji: !this.data.biaoji
      })
      var that = this;
      requestsendtoken('api/QX/UseQuestionCancleSign', "GET", param, function (e) {
        wx.showToast({
          title: e.msg,
          icon: 'none'
        });
        if (e.code == 0) {
          for (var m = 0; m < alldatas.length; m++) {
            if (questionid == alldatas[m].questionid) {
              alldatas[m].sign = that.data.biaoji
            }
          }
        }
      })
    } else {
      var that = this;
      that.setData({
        biaoji: !that.data.biaoji
      })
      requestsendtoken('api/QX/UseQuestionSign', "GET", param, function (e) {
        wx.showToast({
          title: e.msg,
          icon: 'none'
        });
        if (e.code == 0) {
          for (var m = 0; m < alldatas.length; m++) {
            if (questionid == alldatas[m].questionid) {
              alldatas[m].sign = that.data.biaoji
            }
          }
        }
      })
    }
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  }
})
import {
  requestsend,
  requestsendtoken
} from '../../utils/util.js'
import {
  Config
} from '../../utils/config';
// let requestsends = new requestsend()
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    activeNames: ['1'],
    tilist: Object,
    isActive: 1,
    tihsi: '',
    tihsi1: '',
    courses: true,
    title: '',
    money: '',
    isCollect: true,
    timutab: [],
    show: false,
    isIos: null,
    showif: true,
    showifs1: true,
    aomid: '',
    nodata: false,
    showl: true,
    isshowc: false,
    errormark:'',
    coursesortid: 0,
    type:''
  },
  onChange(event) {
    this.setData({
      activeNames: event.detail
    });
  },
  onActive: function (e) {
    var errormark = this.data.errormark
    var token = wx.getStorageSync("userName")
    // wx.getStorageSync("token")
    var index = e.currentTarget.dataset.tab;
    var id = e.currentTarget.dataset.id; //获取当前点击的元素下标
    // console.log(e.currentTarget);
    this.setData({
      isActive: index,
      showl: true,
      nodata: false,
      tilist: []
    })
    var that = this;
    var param = {
      psortid: id,
      aomid: that.data.aomid
    }
    if (errormark == '1') {
      requestsendtoken('api/QX/GetLoginWrongPaper', "GET", param, function (e) {
        if (e.data.data.length == 0) {
          that.setData({
            nodata: true,
            showl: false,
            tilist: []
          })
          return;
        } else {
          that.setData({
            showl: false,
            nodata: false
          })
        }
        if (e.data.data[0].title) {
          that.setData({
            courses: true
          })
        } else {
          that.setData({
            courses: false
          })
        }
        that.setData({
          tilist: e.data.data,
          money: e.data.money,
          isCollect: e.data.iscollert
        })
      })
    }
    if (errormark == '2') {
      requestsendtoken('api/QX/GetLoginSignPaper', "GET", param, function (e) {
        if (e.data.data.length == 0) {
          that.setData({
            nodata: true,
            showl: false,
            tilist: []
          })
          return;
        } else {
          that.setData({
            showl: false,
            nodata: false
          })
        }
        if (e.data.data[0].title) {
          that.setData({
            courses: true
          })
        } else {
          that.setData({
            courses: false
          })
        }
        that.setData({
          tilist: e.data.data,
          money: e.data.money,
          isCollect: e.data.iscollert
        })
      })
    }
  },
  onCollect: function () {
    var token = wx.getStorageSync("userName")
    // wx.getStorageSync("token")
    if (token == '') {
      wx.showToast({
        title: `该微信还未注册精略网校或未绑定精略网校账号，暂不可使用该功能，请尽快注册并登陆！`,
        icon: "none",
        duration: 5000
      })
    } else {
      this.setCollect()
    }

  },
  setCollect: function (e) {
    var param = {
      typeid: 1,
      aomid: this.data.aomid
    }
    var that = this;
    if (that.data.isCollect) {
      requestsendtoken('api/UserCollect/DelUserCollect', "GET", param, function (e) {
        if (e.code == 0) {
          that.setData({
            isCollect: !that.data.isCollect
          })
        } else {
          wx.showToast({
            title: `` + e.msg,
            icon: "none",
            duration: 2000
          })
        }
      })
    } else {
      requestsendtoken('api/UserCollect/AddUserCollect', "GET", param, function (e) {
        if (e.code == 0) {
          that.setData({
            isCollect: !that.data.isCollect
          })
        } else {
          wx.showToast({
            title: `` + e.msg,
            icon: "none",
            duration: 2000
          })
        }
      })
    }

  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var errormark = options.errormark
    // var errormark = 1;
    var token = wx.getStorageSync("userName")
    this.setData({
      isIos: app.globalData.isIos,
      aomid: options.aomid,
      errormark: errormark,
      coursesortid: 0
    })
    console.log(this.data.isIos)
    console.log(options)
    var aomid = options.aomid
    var coursesortid = 0
    var param = {
      classid: Config.classid,
      aomid: aomid
    }
    var param3 = {
      psortid: 1,
      aomid: aomid
    }
    var that = this;
    //未登录
    requestsend('api/TiKu/GetTikuType', "GET", param, function (e) {
      param3.psortid = e.data.timutab[0].id
      that.setData({
        title: e.data.title,
        timutab: e.data.timutab
      })
    })
    if (errormark == '1'){
      wx.setNavigationBarTitle({
        title: '错题本'
      })
      requestsendtoken('api/QX/GetLoginWrongPaper', "GET", param3, function (e) {
        if (e.data.data.length == 0) {
          that.setData({
            nodata: true,
            showl: false,
            tilist: []
          })
          return;
        } else {
          that.setData({
            showl: false,
            nodata: false
          })
        }
        if (e.data.data[0].title) {
          that.setData({
            courses: true
          })
        } else {
          that.setData({
            courses: false
          })
        }
        that.setData({
          tilist: e.data.data,
          money: e.data.money,
          type: 2,
          isCollect: e.data.iscollert
        })
      })
    }
    if (errormark == '2') {
      wx.setNavigationBarTitle({
        title: '标记题'
      })
      requestsendtoken('api/QX/GetLoginSignPaper', "GET", param3, function (e) {
        if (e.data.data.length == 0) {
          that.setData({
            nodata: true,
            showl: false,
            tilist: []
          })
          return;
        } else {
          that.setData({
            showl: false,
            nodata: false
          })
        }
        if (e.data.data[0].title) {
          that.setData({
            courses: true
          })
        } else {
          that.setData({
            courses: false
          })
        }
        that.setData({
          tilist: e.data.data,
          money: e.data.money,
          type: 3,
          isCollect: e.data.iscollert
        })
      })
    }
  },
  getAddInfo(e) {
    console.log(e)
    if (e.detail.showifs) {
      this.setData({
        tihsi1: '您的练习次数已用完。',
        showifs1: false
      })
    } else {
      this.setData({
        tihsi: '您还未购买《' + e.detail.title + '》题库，购买后开启整套题库的使用。',
        money: e.detail.money,
        showif: e.detail.showif
      })
    }

  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    // this.getTikuTab()
  },
  // getTikuTab() {
  //   tikuModel.getTikutab(data => {
  //     console.log(data)
  //     // this.setData({
  //     //   tikutab: data
  //     // })
  //   })
  // },
  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})